{"version":3,"sources":["main/exercises/exercises-list/BaseExercise.tsx","main/exercises/exercises-list sync nonrecursive /.tsx","main/exercises/exercises-list/Exercise1.tsx","main/exercises/exercises-list/Exercise10.tsx","main/exercises/exercises-list/Exercise11.tsx","main/exercises/exercises-list/Exercise12.tsx","main/exercises/exercises-list/Exercise13.tsx","main/exercises/exercises-list/Exercise2.tsx","main/exercises/exercises-list/Exercise3.tsx","main/exercises/exercises-list/Exercise4.tsx","main/exercises/exercises-list/Exercise5.tsx","main/exercises/exercises-list/Exercise6.tsx","main/exercises/exercises-list/Exercise7.tsx","main/exercises/exercises-list/Exercise8.tsx","main/exercises/exercises-list/Exercise9.tsx","main/navigation/Navigation.tsx","main/top-bar/TopBar.tsx","main/exercises/exercises-list/index.ts","main/exercises/ExercisesContainer.tsx","main/Main.tsx","serviceWorker.ts","index.tsx"],"names":["StyledSummary","styled","summary","StyledWrapper","div","Divider","NextExerciseButton","button","props","disabled","StyledInput","input","ProxyWrapper","renderProxy","component","index","ref","innerChildren","opening","type","children","expected","validProps","result","Object","entries","map","key","value","length","mapAttributes","closing","Array","isArray","c","i","every","join","React","createElement","BaseExercise","title","description","nextExerciseId","id","history","useHistory","useState","xpath","setXpath","selectedNodes","setSelectedNodes","foundSelected","setFoundSelected","proxyRef","useRef","useEffect","current","proxyContainer","document","evaluate","XPathResult","ANY_TYPE","nodes","node","iterateNext","contains","push","error","removeSelectedClassNames","useCallback","element","child","classList","remove","handleNextExercise","expectedItems","from","querySelectorAll","selectedExpectedCount","selectedNode","add","includes","dangerouslySetInnerHTML","__html","placeholder","onChange","target","onClick","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports","exerciceData","language","age","name","city","price","ExerciseLink","Link","selected","Navigation","exercises","selectedExerciseId","useParams","exerciseId","renderExercises","exercise","to","Title","span","TopBar","src","extractExercises","require","filter","k","reduce","acc","data","default","ExercisesContainer","useMemo","exercisesList","WebFontLoader","load","google","families","GlobalStyle","createGlobalStyle","ContentWrapper","mappedExercises","values","Main","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.daf7603c.chunk.js","sourcesContent":["/* eslint-disable */\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst StyledSummary = styled.summary`\r\n  max-width: 800px;\r\n  white-space: pre-line;\r\n\r\n  ul {\r\n    margin: auto;\r\n    margin-block-end: -2em;\r\n  }\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding-left: 8px;\r\n  padding-bottom: 16px;\r\n  overflow: auto;\r\n  flex: 4;\r\n  height: calc(100vh - 81px);\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  border-bottom: 1px solid lightgray;\r\n  margin: 20px 0;\r\n  margin-left: -8px;\r\n`;\r\n\r\nconst NextExerciseButton = styled.button`\r\n  margin-top: 8px;\r\n  border: none;\r\n  padding: 8px;\r\n  outline: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-size: 16px;\r\n\r\n  ${(props) =>\r\n    !props.disabled\r\n      ? `\r\n    background: rgba(178, 34, 34, 0.9);\r\n    cursor: pointer;\r\n    \r\n    :hover {\r\n      background: rgba(178, 34, 34, 1);\r\n    }\r\n    :active {\r\n      background: rgba(178, 34, 34, 0.8);\r\n    }\r\n  `\r\n      : `\r\n    background: rgba(178, 34, 34, 0.3);\r\n  `}\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid firebrick;\r\n  width: 80%;\r\n  margin-top: 8px;\r\n  margin-bottom: 8px;\r\n  outline: none;\r\n  display: block;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ProxyWrapper = styled.div`\r\n  border-left: 4px solid firebrick;\r\n\r\n  * {\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    margin-left: 14px;\r\n    padding: 2px;\r\n    display: block;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  [expected] {\r\n    background: rgba(178, 34, 34, 0.04);\r\n  }\r\n\r\n  *:hover {\r\n    background: rgba(0, 0, 0, 0.04);\r\n  }\r\n\r\n  .selected {\r\n    background: rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .selected-expected {\r\n    background: rgba(0, 255, 0, 0.3);\r\n  }\r\n`;\r\n\r\nexport interface ExerciceData {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  nextExerciseId?: string;\r\n  component?: JSX.Element;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst mapAttributes = (props: any) => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const { children, ref, expected, ...validProps } = props;\r\n\r\n  const result = Object.entries(validProps).map(([key, value]) => {\r\n    const keyToUse = key === 'className' ? 'class' : key;\r\n    return `${keyToUse}=\"${value}\" `;\r\n  });\r\n\r\n  return result.length > 0 ? ` ${result}` : '';\r\n};\r\n\r\nconst renderProxy = (\r\n  component: React.ReactElement,\r\n  index: string,\r\n  ref?: React.MutableRefObject<Element | null>,\r\n): React.ReactElement => {\r\n  if (typeof component === 'string') {\r\n    return component;\r\n  }\r\n  let innerChildren: unknown[] = [];\r\n  const opening = `<${component.type}${mapAttributes(component.props)}>`;\r\n  const closing = `</${component.type}>`;\r\n\r\n  if (Array.isArray(component.props?.children)) {\r\n    innerChildren = [\r\n      ...component.props.children.map((c: React.ReactElement, i: number) =>\r\n        renderProxy(c, `${index}-${i}`),\r\n      ),\r\n    ];\r\n  } else if (component.props?.children) {\r\n    innerChildren = [renderProxy(component.props.children, `child-${index}`)];\r\n  } else {\r\n    innerChildren = [];\r\n  }\r\n\r\n  let children = [opening, ...innerChildren, closing];\r\n  if (children.every((c) => typeof c === 'string')) {\r\n    children = [children.join(' ')];\r\n  }\r\n  // eslint-disable-next-line react/no-children-prop\r\n  return React.createElement(component.type, {\r\n    ...component.props,\r\n    children,\r\n    ref,\r\n    key: index,\r\n  });\r\n};\r\n\r\nconst BaseExercise = ({ title, description, nextExerciseId, component, id }: ExerciceData) => {\r\n  const history = useHistory();\r\n  const [xpath, setXpath] = useState('');\r\n  const [selectedNodes, setSelectedNodes] = useState<HTMLElement[]>([]);\r\n  const [foundSelected, setFoundSelected] = useState(false);\r\n  const proxyRef = useRef<Element>(null);\r\n\r\n  useEffect(() => {\r\n    if (!proxyRef.current) {\r\n      return;\r\n    }\r\n    const proxyContainer: Element = proxyRef.current!;\r\n\r\n    try {\r\n      const result = document.evaluate(xpath, proxyContainer, null, XPathResult.ANY_TYPE, null);\r\n\r\n      const nodes: HTMLElement[] = [];\r\n      let node = result.iterateNext();\r\n      while (node) {\r\n        if (proxyContainer.contains(node)) {\r\n          nodes.push(node as HTMLElement);\r\n        }\r\n        node = result.iterateNext();\r\n      }\r\n\r\n      setSelectedNodes(nodes);\r\n    } catch (error) {\r\n      setSelectedNodes([]);\r\n    }\r\n  }, [xpath]);\r\n\r\n  const removeSelectedClassNames = useCallback((element: Element) => {\r\n    for (const child of element.children) {\r\n      removeSelectedClassNames(child);\r\n    }\r\n\r\n    element.classList.remove('selected');\r\n    element.classList.remove('selected-expected');\r\n  }, []);\r\n\r\n  const handleNextExercise = useCallback(() => {\r\n    if (!foundSelected) {\r\n      return;\r\n    }\r\n\r\n    history.push(`/exercises/${nextExerciseId}`);\r\n  }, [foundSelected]);\r\n\r\n  useEffect(() => {\r\n    if (proxyRef.current) {\r\n      removeSelectedClassNames(proxyRef.current);\r\n    }\r\n\r\n    const expectedItems = Array.from(proxyRef.current?.querySelectorAll('[expected]') || []);\r\n    let selectedExpectedCount = 0;\r\n    for (const selectedNode of selectedNodes) {\r\n      selectedNode.classList.add('selected');\r\n      if (expectedItems.includes(selectedNode)) {\r\n        selectedExpectedCount++;\r\n      }\r\n    }\r\n\r\n    if (\r\n      expectedItems.length === selectedExpectedCount &&\r\n      selectedNodes.length === selectedExpectedCount\r\n    ) {\r\n      for (const selectedNode of selectedNodes) {\r\n        selectedNode.classList.add('selected-expected');\r\n      }\r\n      setFoundSelected(true);\r\n    } else {\r\n      setFoundSelected(false);\r\n    }\r\n  }, [removeSelectedClassNames, selectedNodes]);\r\n\r\n  return (\r\n    <StyledWrapper key={id}>\r\n      <h1>{title}</h1>\r\n      <StyledSummary dangerouslySetInnerHTML={{ __html: description }} />\r\n      {component && (\r\n        <>\r\n          <Divider />\r\n          <ProxyWrapper>{renderProxy(component, '0', proxyRef)}</ProxyWrapper>\r\n          <Divider />\r\n          <StyledInput\r\n            type='text'\r\n            placeholder='Enter the XPath here'\r\n            value={xpath}\r\n            onChange={({ target: { value } }) => setXpath(value)}\r\n          />\r\n        </>\r\n      )}\r\n      {nextExerciseId && (\r\n        <NextExerciseButton disabled={!foundSelected} onClick={handleNextExercise}>\r\n          Next exercise\r\n        </NextExerciseButton>\r\n      )}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default BaseExercise;\r\n","var map = {\n\t\"./BaseExercise.tsx\": 20,\n\t\"./Exercise1.tsx\": 44,\n\t\"./Exercise10.tsx\": 45,\n\t\"./Exercise11.tsx\": 46,\n\t\"./Exercise12.tsx\": 47,\n\t\"./Exercise13.tsx\": 48,\n\t\"./Exercise2.tsx\": 49,\n\t\"./Exercise3.tsx\": 50,\n\t\"./Exercise4.tsx\": 51,\n\t\"./Exercise5.tsx\": 52,\n\t\"./Exercise6.tsx\": 53,\n\t\"./Exercise7.tsx\": 54,\n\t\"./Exercise8.tsx\": 55,\n\t\"./Exercise9.tsx\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43;","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '1',\r\n  title: 'Introduction',\r\n  description: `XPath is a Language used to navigate through elements and attributes in XML (and HTML is basically XML 😃)\r\nEach exercise in this tutorial will include an introduction to something new in XPath world and a way to try it out by writing your own XPath.\r\nIt is advised to proceed to the next level only after successfully finding indicated element.\r\n\r\nTo complete this exercise select the book element using this selector: <code>//book</code>`,\r\n  nextExerciseId: '2',\r\n  component: (\r\n    <bookstore>\r\n      <book expected='true'>XPath tutorial</book>\r\n    </bookstore>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '10',\r\n  title: 'Selecting text of elements',\r\n  description: `XPath also has the ability to select elements using their text values\r\nLet's say I want to select a name element with the value of Forbes, how do I do that?\r\nThat's where <code>text()</code> and <code>contains()</code> comes to help!\r\nUsing this selector <code>//name[contains(text(), 'Forbes')]</code> you can select all the name elements with a value of \"Forbes\". (Actually you could also use a selector <code>//name[text()='Forbes']</code>, but due to the way this tutorial words - that won't work here)\r\n\r\nTo complete this exercise select all name elements of magazines and encyclopedias in the <b>first</b> bookstore, that contain the word \"The\".\r\n`,\r\n  nextExerciseId: '11',\r\n  component: (\r\n    <city>\r\n      <bookstore>\r\n        <book>\r\n          <name>The Hunger Games</name>\r\n        </book>\r\n        <book>\r\n          <name>Harry Potter and The Order of The Phoenix</name>\r\n        </book>\r\n        <book>\r\n          <name>To Kill a Mockingbird</name>\r\n        </book>\r\n        <encyclopedia>\r\n          <name expected='true'>The London Encyclopaedia</name>\r\n        </encyclopedia>\r\n        <magazine>\r\n          <name>Cosmopolitan</name>\r\n        </magazine>\r\n        <book>\r\n          <name>Pride and Prejudice</name>\r\n        </book>\r\n        <magazine>\r\n          <name>Forbes</name>\r\n        </magazine>\r\n        <magazine>\r\n          <name expected='true'>The National Trust Magazine</name>\r\n        </magazine>\r\n      </bookstore>\r\n      <bookstore>\r\n        <book>\r\n          <name>The Hunger Games</name>\r\n        </book>\r\n        <magazine>\r\n          <name>The National Trust Magazine</name>\r\n        </magazine>\r\n      </bookstore>\r\n    </city>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '11',\r\n  title: 'Selecting elements within elements - Exercise 1',\r\n  description: `There's one more tricky - complex - powerful thing with XPath that has not been explored yet - selecting elements according to their children.\r\n\r\n  <b>Please note the difference!</b>\r\n  To select the <code>book</code> element with a price of 25 we can use this selector: <code>//book[./price[contains(text(), \"25\")]]</code>\r\n  To select the <code>price</code> element with a value of 25 we can use this selector: <code>//book/price[contains(text(), \"25\")]</code>\r\n\r\n  This way we can select a specific element according to its children.\r\n\r\n  To complete this exercise select all <code>price</code> elements of books where author is William Shakespeare.\r\n`,\r\n  nextExerciseId: '12',\r\n  component: (\r\n    <bookstore>\r\n      <book>\r\n        <author>Enid Blyton</author>\r\n        <author>Barbara Cartland</author>\r\n        <price>14</price>\r\n      </book>\r\n      <book>\r\n        <author>Sidney Sheldon</author>\r\n        <author>William Shakespeare</author>\r\n        <price expected='true'>15</price>\r\n      </book>\r\n      <book>\r\n        <author>J. K. Rowling</author>\r\n        <author>Eiichiro Oda</author>\r\n        <price>7</price>\r\n      </book>\r\n      <book>\r\n        <author>William Shakespeare</author>\r\n        <price expected='true'>12</price>\r\n      </book>\r\n      <book>\r\n        <author>Paulo Coelho</author>\r\n        <price>30</price>\r\n      </book>\r\n      <book>\r\n        <author>Agatha Christie</author>\r\n        <price>25</price>\r\n      </book>\r\n    </bookstore>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '12',\r\n  title: 'Selecting elements within elements - Exercise 2',\r\n  description: `Since selecting elements within other elements is a really important and useful feature - lets have one more exercise with it. And let it be the last!\r\n\r\n  To complete this last exercise select the book element of the third bookstore in the city that contains a bookstore with a book by Sidney Sheldon.\r\n  (I know, that there are simpler ways to select this book, but we want to learn something along the way, right?)\r\n`,\r\n  nextExerciseId: '13',\r\n  component: (\r\n    <coutry>\r\n      <city>\r\n        <bookstore>\r\n          <book>\r\n            <author>Enid Blyton</author>\r\n          </book>\r\n        </bookstore>\r\n        <bookstore>\r\n          <book>\r\n            <author>Agatha Christie</author>\r\n          </book>\r\n        </bookstore>\r\n        <bookstore>\r\n          <book>\r\n            <author>J. K. Rowling</author>\r\n          </book>\r\n        </bookstore>\r\n      </city>\r\n      <city>\r\n        <bookstore>\r\n          <book>\r\n            <author>Barbara Cartland</author>\r\n          </book>\r\n        </bookstore>\r\n        <bookstore>\r\n          <book>\r\n            <author>Sidney Sheldon</author>\r\n          </book>\r\n        </bookstore>\r\n        <bookstore>\r\n          <book expected='true'>\r\n            <author>J. K. Rowling</author>\r\n          </book>\r\n        </bookstore>\r\n      </city>\r\n    </coutry>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '13',\r\n  title: 'Congratulations!!',\r\n  description: `That might have been a rough trip, but you've made it!!\r\n  Now you can call yourself an expert in XPath! (at least in my eyes)\r\n  \r\n  <img src=\"https://i.pinimg.com/originals/90/6a/d9/906ad9a5dc4ed6ee65fd1b03d63e1663.gif\"/>\r\n`,\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '2',\r\n  title: 'How does a selector work?',\r\n  description: `You can select one or more elements using XPath. Your current selection will be highlighted in the list of elements.\r\nYou can try it out by selecting:\r\n<ul>\r\n  <li>a bookstore with <code>//bookstore</code>, </li>\r\n  <li>all books with <code>//book</code>, </li>\r\n  <li>all authors with <code>//author</code>, </li>\r\n</ul>\r\nYou can also select an element within an element. For example you can select an author, that belongs to a book by using <code>//book/author</code>.\r\nTo complete this exercise select <b>the author, that belongs to the bookstore</b> (does not belong to a book).\r\n`,\r\n  nextExerciseId: '3',\r\n  component: (\r\n    <bookstore>\r\n      <book>\r\n        <author>William Shakespeare</author>\r\n        <name>Hamlet</name>\r\n      </book>\r\n      <book>\r\n        <author>J. K. Rowling</author>\r\n        <name>Harry Poter</name>\r\n      </book>\r\n      <book>\r\n        <author>Stephen King</author>\r\n        <name>The Shining</name>\r\n      </book>\r\n      <author expected='true'>James Patterson</author>\r\n    </bookstore>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '3',\r\n  title: 'Selecting using an attribute',\r\n  description: `You can select an element not only by name (bookstore, book, author), but also by using <b>attributes of this element</b>.\r\nTo do that - you can use the attribute selector on XPath. It looks like that: <code>//elementToSelect[@attributeName=\"attributeValue\"]</code>, where:\r\n<ul>\r\n  <li><code>elementToSelect</code> - the element you're selecting, like book or an author</li>\r\n  <li><code>attributeName</code> - the attribute name of the element you're selecting, for example language or age</li>\r\n  <li><code>attributeValue</code> - the attribute that the attribute should be equal to to be matched, like 30, 55, en or nl</li>\r\n</ul>\r\nTo complete this exercise select <b>an author with an age of 55</b>.\r\n`,\r\n  nextExerciseId: '4',\r\n  component: (\r\n    <bookstore>\r\n      <book language='en'>\r\n        <author age='30'>William Shakespeare</author>\r\n        <name>Hamlet</name>\r\n      </book>\r\n      <book language='nl'>\r\n        <author age='30'>William Shakespeare</author>\r\n        <name>Hamlet</name>\r\n      </book>\r\n      <book language='en'>\r\n        <author age='55' expected='true'>\r\n          J. K. Rowling\r\n        </author>\r\n        <name>Harry Poter</name>\r\n      </book>\r\n      <employee age='55'>\r\n        <name>Mark</name>\r\n      </employee>\r\n    </bookstore>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '4',\r\n  title: 'Last two exercises combined',\r\n  description: `You can select an element within another element, that has a specific attribute value.\r\nTo complete this exercise select <b>The price of a book named \"Hamlet\" in bookstore named \"vaga\"</b>.\r\n`,\r\n  nextExerciseId: '5',\r\n  component: (\r\n    <city>\r\n      <bookstore name='vaga'>\r\n        <book name='The Alchemist'>\r\n          <author>Paulo Coelho</author>\r\n          <price>25</price>\r\n        </book>\r\n        <book name='Hamlet'>\r\n          <author>William Shakespeare</author>\r\n          <price expected='true'>17</price>\r\n        </book>\r\n        <author>James Patterson</author>\r\n      </bookstore>\r\n      <bookstore name='pegasas'>\r\n        <book name='Hamlet'>\r\n          <author>William Shakespeare</author>\r\n          <price>20</price>\r\n        </book>\r\n      </bookstore>\r\n    </city>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '5',\r\n  title: 'Relative select vs absolute select',\r\n  description: `As we have already tried - you can select elements within other elements. But what if you need an element that is a direct child of some other element? <b>Or</b> if you need an element, that is a child, of a child, of a child..?\r\nTo achieve that, we can use relative or absolute selecting of elements.\r\n<ul>\r\n  <li><code>//</code> use a double slash for an <b>Absolute</b> select\r\n  <li><code>/</code> use a single slash for a <b>Relative</b> select\r\n</ul>\r\n\r\nYou might ask what an Absolute or a Relative means?\r\nThe answer is simple - using an <b>Absolute</b> select you get <b>any</b> element within a tree, using a <b>Relative</b> select you get only a direct child.\r\n\r\n<b>Example</b>\r\nIn the given structure try writing a selector <code>//bookstore[@city=\"Kaunas\"]<b>/</b>author</code> - only <b>Direct children</b> of bookstore will be selected.\r\nHowever, if you'll try writing a selector <code>//bookstore[@city=\"Kaunas\"]<b>//</b>author</code> - all authors <b>no matter how deep they are</b> in bookstore of Kaunas will be selected.\r\n\r\nTo complete this exercise select <b>all</b> Chapters of book \"The Alchemist\" in \"Kaunas\" bookstore.\r\n`,\r\n  nextExerciseId: '6',\r\n  component: (\r\n    <city>\r\n      <bookstore city='Kaunas'>\r\n        <book name='Hamlet'>\r\n          <author>William Shakespeare</author>\r\n          <price>17</price>\r\n          <chapter>\r\n            Chapter 1<chapter>Sub-Chapter 1</chapter>\r\n          </chapter>\r\n        </book>\r\n        <book name='The Alchemist'>\r\n          <author>Paulo Coelho</author>\r\n          <chapter expected='true'>\r\n            Chapter 1<chapter expected='true'>Sub-Chapter 1</chapter>\r\n          </chapter>\r\n        </book>\r\n        <book name='XPath Basics'>\r\n          <author>Martynas Kanapinskas</author>\r\n          <price>0.99</price>\r\n          <chapter>\r\n            Chapter 1<chapter>Sub-Chapter 1</chapter>\r\n          </chapter>\r\n        </book>\r\n        <author>James Patterson</author>\r\n      </bookstore>\r\n      <bookstore city='Vilnius'>\r\n        <book name='The Alchemist'>\r\n          <author>Paulo Coelho</author>\r\n          <price>25</price>\r\n          <chapter>\r\n            Chapter 1<chapter>Sub-Chapter 1</chapter>\r\n          </chapter>\r\n        </book>\r\n        <author>James Patterson</author>\r\n      </bookstore>\r\n    </city>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '6',\r\n  title: 'Unknown elements',\r\n  description: `Sometimes you might need to select multiple elements, that are of different types or you don't know the type of.\r\nTo achieve that, the name of the element can be replaced with <code>*</code>.\r\nThe very same logic also applies for attributes - you can replace name of any attribute with a <code>*</code>. Some examples:\r\n<ul>\r\n  <li><code>//*</code> - will select all elements in the document</li>\r\n  <li><code>//bookstore/*</code> - will select all child elements of bookstore, no matter the type</li>\r\n  <li><code>//bookstore//*</code> - will select all descending elements of bookstore, no matter the type</li>\r\n  <li><code>//*[@*=\"20\"]</code> - will select all elements that have an attribute value of <code>20</code></li>\r\n</ul>\r\nTo complete this exercise select author with an age of 20 and a book with a price of 20 (but not the pages with a length of 20).\r\n`,\r\n  nextExerciseId: '7',\r\n  component: (\r\n    <bookstore>\r\n      <book price='17'>\r\n        <author>Enid Blyton</author>\r\n        <pages length='99' />\r\n      </book>\r\n      <book expected='true' price='20'>\r\n        <author>Sidney Sheldon</author>\r\n        <pages length='75' />\r\n      </book>\r\n      <book price='14'>\r\n        <author>Sidney Sheldon</author>\r\n        <pages length='40' />\r\n      </book>\r\n      <book price='25'>\r\n        <author>Sidney Sheldon</author>\r\n        <pages length='20' />\r\n      </book>\r\n      <author expected='true' age='20'>\r\n        Sidney Sheldon\r\n      </author>\r\n      <author age='40'>Enid Blyton</author>\r\n    </bookstore>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '7',\r\n  title: 'Predicates',\r\n  description: `In some previous exercises we selected elements using an attribute selector <code>//element[@attribute=\"value\"]</code>.\r\nThis selector is called a <code>Predicate</code> and as you might have guessed - there are more.\r\n<ul>\r\n  <li>Selecting a specific element in a list <code>//book[3]</code>. The first element in an array is selected with <code>1</code></li>\r\n  <li>Selecting the <b>last</b> element in a list <code>//book[last()]</code>. </li>\r\n  <li>Selecting a specific element in a list <code>//book[3]</code> starting from last element <code>//book[last() - 2]</code></li>\r\n  <li>Selecting the <b>last N</b> elements or the <b>first N</b> elements <code>//book[position() > 3]</code>, <code>//book[position() < 3]</code></li>\r\n</ul>\r\nTo complete this exercise select the last authors of the first three books.\r\n`,\r\n  nextExerciseId: '8',\r\n  component: (\r\n    <bookstore>\r\n      <book>\r\n        <author>Enid Blyton</author>\r\n        <author expected='true'>Barbara Cartland</author>\r\n      </book>\r\n      <book>\r\n        <author>Sidney Sheldon</author>\r\n        <author expected='true'>Danielle Steel</author>\r\n      </book>\r\n      <book>\r\n        <author>J. K. Rowling</author>\r\n        <author>Eiichiro Oda</author>\r\n        <author expected='true'>Harold Robbins</author>\r\n      </book>\r\n      <book>\r\n        <author>William Shakespeare</author>\r\n      </book>\r\n      <book>\r\n        <author>Paulo Coelho</author>\r\n      </book>\r\n      <book>\r\n        <author>Agatha Christie</author>\r\n      </book>\r\n    </bookstore>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '8',\r\n  title: 'Operators - Exercise 1',\r\n  description: `In previous exercises we have encountered a couple operators already - <code>+</code>, <code>-</code>, <code>=</code>, <code>></code>, <code><</code>.\r\nHowever - there are more of these:\r\n<ul>\r\n  <li><code>|</code> - an <b>OR</b> operator - it allows to select <i>this</i> OR <i>that</i>. (This applies only for two selectors, for example <code>//book | //author</code>)</li>\r\n  <li><code>*</code> - operator used to multiply values</li>\r\n  <li><code>div</code> - operator used to divide values</li>\r\n  <li><code>mod</code> - operator used to get modulus of a value</li>\r\n  <li><code>!=</code> - operator used to match values, that ane <b>NOT</b> equal to something. For example <code>//book[@price!=\"17\"]</code> will match all books, that have a price different than 17</li>\r\n  <li><code>and</code> - operator used to combine logic of matches for an element.\r\n  For example <code>//book[@price >= 15 and @price <= 30]</code> will match books with a price in the range of 15 to 30</li>\r\n  <li><code>or</code> - operator used to combine logic of matches for an element.\r\n  For example <code>//book[@price > 40 or @price < 15]</code> will match books with a price that is higher than 40 and lower than 15</li>\r\n  </li>\r\n</ul>\r\nTo complete this exercise select books where the price is higher than 25 and magazines where the price is lower than 5.\r\n`,\r\n  nextExerciseId: '9',\r\n  component: (\r\n    <city>\r\n      <bookstore name='Pegasas'>\r\n        <book expected='true' price='29' />\r\n        <magazine expected='true' price='4' />\r\n        <book price='14' />\r\n        <encyclopedia price='80' />\r\n        <magazine price='10' />\r\n        <book expected='true' price='55' />\r\n        <magazine price='12' />\r\n        <encyclopedia price='40' />\r\n        <book price='25' />\r\n        <book price='17' />\r\n        <magazine expected='true' price='2' />\r\n        <book price='19' />\r\n      </bookstore>\r\n      <bookstore name='Vaga'>\r\n        <encyclopedia price='80' />\r\n        <magazine price='10' />\r\n        <book price='55' />\r\n        <magazine price='12' />\r\n        <magazine price='2' />\r\n        <book price='19' />\r\n      </bookstore>\r\n    </city>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React from 'react';\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nconst exerciceData: ExerciceData = {\r\n  id: '9',\r\n  title: 'Operators - Exercise 2',\r\n  description: `Since operators are very powerful and important, let's have one more exercise with them.\r\nTo complete this exercise select all books where the price is lower than 20 or higher than 60. And to make things interesting - exclude books with a price of 69.\r\n`,\r\n  nextExerciseId: '10',\r\n  component: (\r\n    <bookstore name='Pegasas'>\r\n      <book price='29' />\r\n      <book expected='true' price='14' />\r\n      <book price='55' />\r\n      <book price='25' />\r\n      <book price='69' />\r\n      <book price='45' />\r\n      <book expected='true' price='80' />\r\n      <book price='69' />\r\n      <book expected='true' price='90' />\r\n      <book price='22' />\r\n      <book expected='true' price='5' />\r\n      <book price='69' />\r\n      <book price='49' />\r\n      <book price='55' />\r\n      <book price='43' />\r\n      <book price='58' />\r\n    </bookstore>\r\n  ),\r\n};\r\n\r\nexport default exerciceData;\r\n","import React, { useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { NavigationItem } from 'main/types';\r\n\r\nconst StyledWrapper = styled.div`\r\n  width: 300px;\r\n  border-right: 1px solid lightgray;\r\n  padding: 8px;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// eslint-disable-next-line no-undef\r\nconst ExerciseLink = styled(Link)<{ selected: boolean }>`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  text-decoration: none;\r\n  color: unset;\r\n  cursor: pointer;\r\n  display: block;\r\n\r\n  color: ${(props) => (props.selected ? 'firebrick;' : 'grey')};\r\n`;\r\n\r\nconst Navigation = ({ exercises }: { exercises: NavigationItem[] }) => {\r\n  const { exerciseId: selectedExerciseId } = useParams<{ exerciseId: string }>();\r\n\r\n  const renderExercises = useCallback(\r\n    (exercise: NavigationItem): React.ReactChild => {\r\n      return (\r\n        <ExerciseLink\r\n          key={exercise.id}\r\n          to={`/exercises/${exercise.id}`}\r\n          selected={selectedExerciseId === exercise.id}\r\n        >\r\n          {exercise.name}\r\n        </ExerciseLink>\r\n      );\r\n    },\r\n    [selectedExerciseId],\r\n  );\r\n  return <StyledWrapper>{exercises.map(renderExercises)}</StyledWrapper>;\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 8px;\r\n  border-bottom: 1px solid lightgray;\r\n  display: flex;\r\n\r\n  img {\r\n    height: 45px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 30px;\r\n  margin-left: 4px;\r\n`;\r\n\r\nconst TopBar = () => {\r\n  return (\r\n    <StyledWrapper>\r\n      <img src='/xpath.png' />\r\n      <Title>XPath Tutorial</Title>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","/* eslint-disable */\r\n\r\nimport { ExerciceData } from './BaseExercise';\r\n\r\nexport const extractExercises = (req: any) => {\r\n  return req\r\n    .keys()\r\n    .filter((k: any) => !k.includes('index.ts') && !k.includes('BaseExercise.tsx'))\r\n    .reduce((acc: any, key: any) => {\r\n      const data: ExerciceData = req(key).default;\r\n      const exerciseId = data.id;\r\n\r\n      return {\r\n        [exerciseId]: data,\r\n        ...acc,\r\n      };\r\n    }, {}) as { [key: string]: ExerciceData };\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport default extractExercises((require as any).context('./', false, /.tsx/));\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport exercisesList from './exercises-list';\r\nimport BaseExercise from './exercises-list/BaseExercise';\r\n\r\nconst ExercisesContainer = () => {\r\n  const { exerciseId } = useParams<{ exerciseId: string }>();\r\n  const history = useHistory();\r\n\r\n  const exercise = useMemo(() => exercisesList[exerciseId], [exerciseId]);\r\n\r\n  useEffect(() => {\r\n    if (!exercise) {\r\n      history.push(`/exercises/1`);\r\n    }\r\n  }, [exercise, history]);\r\n\r\n  if (!exercise) {\r\n    return null;\r\n  }\r\n\r\n  return <BaseExercise key={exercise.id} {...exercise} />;\r\n};\r\n\r\nexport default ExercisesContainer;\r\n","import React from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport WebFontLoader from 'webfontloader';\r\nimport Navigation from './navigation/Navigation';\r\nimport TopBar from './top-bar/TopBar';\r\nimport ExercisesContainer from './exercises/ExercisesContainer';\r\nimport { NavigationItem } from './types';\r\nimport exercisesList from './exercises/exercises-list';\r\n\r\nWebFontLoader.load({ google: { families: ['Hind:100,300,400,500,700,900'] } });\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font-family: 'Hind', sans-serif;\r\n    margin: 0;\r\n  }\r\n\r\n  code {\r\n    background: rgb(230,230,230);\r\n    padding: 2px 4px;\r\n  }\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst mappedExercises = Object.values(exercisesList).map<NavigationItem>((e) => ({\r\n  name: e.title,\r\n  id: e.id,\r\n}));\r\nconst Main = () => {\r\n  return (\r\n    <Router>\r\n      <GlobalStyle />\r\n      <TopBar />\r\n      <ContentWrapper>\r\n        <Switch>\r\n          <Route path='/exercises/:exerciseId'>\r\n            <Navigation exercises={mappedExercises} />\r\n            <ExercisesContainer />\r\n          </Route>\r\n          <Redirect to='/exercises/1' />\r\n        </Switch>\r\n      </ContentWrapper>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './main/Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}